#/bin/sh

## Nginx proxy manager found at jc21/nginx-proxy-manager does not have a way to assign a local file on it's host directories as certificates for custom SSL or using tailscale as a custom DNS-01 validation provider.
## This script can be used once you have uploaded a certificate to NPM, which gets placed in /data/custom-ssl/npm-<sequential-order-from-1> 
## Since Tailscale certificates are already formatted correctly for .pem files as confirmed by comparison of cert and key generated by "tailscale cert <domain>" to the pem files saved after uploading to NPM dashboard a custom, this script can be used by a timed systemd service to renew and overwrite the NPM stored pem certs
## If using subdomains or wildcards like with standard nginx and DNS Validation, separate scripts must be made with that subdomain FQDN


#Backup old certificates in case of errors
source_dir="/<NPM_CUSTOM_SSL__SUBDIRECTORY_FOR_THIS_CERT/"
backup_dir="/<BACKUP_DIRECTORY>" #Use a dedicated directory for this, as the only indicator will be a timestamp
timestamp=$(date +"%Y-%m-%d_%H-%M-%S")
for file_to_backup in "$source_dir"/*.crt "$source_dir"/*.key; do
    if [ -e "$file_to_backup" ]; then
        backup_filename="${file_to_backup##*/}_${timestamp}"
        cp "$file_to_backup" "$backup_dir$backup_filename"
    fi
done

# Generate certificate - This assumes you have already generated the keys at least once to add them to NPM, and for headless systems, copied it to a machine with a display so it can be uploaded to NPM
tailscale cert <HOSTNAME>.<TAILNET>.ts.net

# replace contents of NPM stored certificate files with updated content pulled by "tailscale cert"
cat </WORKING_DIRECTORY_DEFINED_IN_SYSTEMD>/<FQDN_GENERATED_BY_TAILSCALE-CERT>.key > <DIRECTORY_BOUND_TO_NPM_/data_FOLDER/custom_ssl/npm-XX (generated starting with npm-01, ordered by initial upload)/privkey.pem
cat </WORKING_DIRECTORY_DEFINED_IN_SYSTEMD>/<FQDN_GENERATED_BY_TAILSCALE-CERT>.crt > <DIRECTORY_BOUND_TO_NPM_/data_FOLDER/custom_ssl/npm-XX (generated starting with npm-01, ordered by initial upload)/fullchain.pem
